{"ast":null,"code":"var _jsxFileName = \"D:\\\\Michael Root\\\\Work\\\\VS Code Workspace\\\\Frontend Mentor Challenges\\\\rest-countries-api-with-color-theme-switcher\\\\src\\\\components\\\\Countries\\\\Country\\\\Country.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport CountryNavigation from './CountryNavigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Country({\n  country,\n  COUNTRIES_DATA\n}) {\n  const countryDetails = {\n    'Native Name': country.nativeName,\n    Population: country.population,\n    Region: country.region,\n    'Sub region': country.subregion,\n    Capital: country.capital,\n    'Top Level Domain': country.topLevelDomain,\n    Currencies: country.currencies[0].code,\n    Languages: country.languages.map(language => {\n      return language.name;\n    }).join(', ')\n  };\n  const borderCountries = country.borders.map(countryCode => {\n    const borderCountriesArr = COUNTRIES_DATA.find(country => {\n      if (country.alpha3Code === countryCode) {\n        return country;\n      }\n    });\n    return borderCountrie;\n  });\n  console.log(borderCountries);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CountryNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \" grid gap-20 grid-cols-1 md:grid-cols-2 flex-grow text-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(borderCountries)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-full\",\n            src: country.flag,\n            alt: `${country.name}'s flag`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" h-full w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(countryDetails).map(detail => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold mr-1\",\n                children: `${detail[0]}:`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: detail[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Border Countries:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/country/${country.alpha3code}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_c = Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","Link","CountryNavigation","jsxDEV","_jsxDEV","Fragment","_Fragment","Country","country","COUNTRIES_DATA","countryDetails","nativeName","Population","population","Region","region","subregion","Capital","capital","topLevelDomain","Currencies","currencies","code","Languages","languages","map","language","name","join","borderCountries","borders","countryCode","borderCountriesArr","find","alpha3Code","borderCountrie","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","JSON","stringify","src","flag","alt","Object","entries","detail","to","alpha3code","_c","$RefreshReg$"],"sources":["D:/Michael Root/Work/VS Code Workspace/Frontend Mentor Challenges/rest-countries-api-with-color-theme-switcher/src/components/Countries/Country/Country.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CountryNavigation from './CountryNavigation';\r\n\r\nexport default function Country({ country, COUNTRIES_DATA }) {\r\n\tconst countryDetails = {\r\n\t\t'Native Name': country.nativeName,\r\n\t\tPopulation: country.population,\r\n\t\tRegion: country.region,\r\n\t\t'Sub region': country.subregion,\r\n\t\tCapital: country.capital,\r\n\t\t'Top Level Domain': country.topLevelDomain,\r\n\t\tCurrencies: country.currencies[0].code,\r\n\t\tLanguages: country.languages\r\n\t\t\t.map((language) => {\r\n\t\t\t\treturn language.name;\r\n\t\t\t})\r\n\t\t\t.join(', '),\r\n\t};\r\n\r\n\tconst borderCountries = country.borders.map((countryCode) => {\r\n\t\tconst borderCountriesArr = COUNTRIES_DATA.find((country) => {\r\n\t\t\tif (country.alpha3Code === countryCode) {\r\n\t\t\t\treturn country;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn borderCountrie;\r\n\t});\r\n\tconsole.log(borderCountries);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CountryNavigation />\r\n\t\t\t<section className=\" grid gap-20 grid-cols-1 md:grid-cols-2 flex-grow text-text\">\r\n\t\t\t\t<p>{JSON.stringify(borderCountries)}</p>\r\n\t\t\t\t<div className=\"h-full w-full\">\r\n\t\t\t\t\t<div className=\"w-full\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"w-full\"\r\n\t\t\t\t\t\t\tsrc={country.flag}\r\n\t\t\t\t\t\t\talt={`${country.name}'s flag`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\" h-full w-full\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1>{country.name}</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{Object.entries(countryDetails).map((detail) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li className=\"flex\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"font-semibold mr-1\">{`${detail[0]}:`}</span>\r\n\t\t\t\t\t\t\t\t\t<p>{detail[1]}</p>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h2>Border Countries:</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Link to={`/country/${country.alpha3code}`}></Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,eAAe,SAASC,OAAOA,CAAC;EAAEC,OAAO;EAAEC;AAAe,CAAC,EAAE;EAC5D,MAAMC,cAAc,GAAG;IACtB,aAAa,EAAEF,OAAO,CAACG,UAAU;IACjCC,UAAU,EAAEJ,OAAO,CAACK,UAAU;IAC9BC,MAAM,EAAEN,OAAO,CAACO,MAAM;IACtB,YAAY,EAAEP,OAAO,CAACQ,SAAS;IAC/BC,OAAO,EAAET,OAAO,CAACU,OAAO;IACxB,kBAAkB,EAAEV,OAAO,CAACW,cAAc;IAC1CC,UAAU,EAAEZ,OAAO,CAACa,UAAU,CAAC,CAAC,CAAC,CAACC,IAAI;IACtCC,SAAS,EAAEf,OAAO,CAACgB,SAAS,CAC1BC,GAAG,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI;IACrB,CAAC,CAAC,CACDC,IAAI,CAAC,IAAI;EACZ,CAAC;EAED,MAAMC,eAAe,GAAGrB,OAAO,CAACsB,OAAO,CAACL,GAAG,CAAEM,WAAW,IAAK;IAC5D,MAAMC,kBAAkB,GAAGvB,cAAc,CAACwB,IAAI,CAAEzB,OAAO,IAAK;MAC3D,IAAIA,OAAO,CAAC0B,UAAU,KAAKH,WAAW,EAAE;QACvC,OAAOvB,OAAO;MACf;IACD,CAAC,CAAC;IAEF,OAAO2B,cAAc;EACtB,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC;EAE5B,oBACCzB,OAAA,CAAAE,SAAA;IAAAgC,QAAA,gBACClC,OAAA,CAACF,iBAAiB;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBtC,OAAA;MAASuC,SAAS,EAAC,6DAA6D;MAAAL,QAAA,gBAC/ElC,OAAA;QAAAkC,QAAA,EAAIM,IAAI,CAACC,SAAS,CAAChB,eAAe;MAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCtC,OAAA;QAAKuC,SAAS,EAAC,eAAe;QAAAL,QAAA,eAC7BlC,OAAA;UAAKuC,SAAS,EAAC,QAAQ;UAAAL,QAAA,eACtBlC,OAAA;YACCuC,SAAS,EAAC,QAAQ;YAClBG,GAAG,EAAEtC,OAAO,CAACuC,IAAK;YAClBC,GAAG,EAAG,GAAExC,OAAO,CAACmB,IAAK;UAAS;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACNtC,OAAA;QAAKuC,SAAS,EAAC,gBAAgB;QAAAL,QAAA,gBAC9BlC,OAAA;UAAAkC,QAAA,eACClC,OAAA;YAAAkC,QAAA,EAAK9B,OAAO,CAACmB;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACNtC,OAAA;UAAAkC,QAAA,EACEW,MAAM,CAACC,OAAO,CAACxC,cAAc,CAAC,CAACe,GAAG,CAAE0B,MAAM,IAAK;YAC/C,oBACC/C,OAAA;cAAIuC,SAAS,EAAC,MAAM;cAAAL,QAAA,gBACnBlC,OAAA;gBAAMuC,SAAS,EAAC,oBAAoB;gBAAAL,QAAA,EAAG,GAAEa,MAAM,CAAC,CAAC,CAAE;cAAE;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC7DtC,OAAA;gBAAAkC,QAAA,EAAIa,MAAM,CAAC,CAAC;cAAC;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC;UAEP,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACLtC,OAAA;UAAAkC,QAAA,gBACClC,OAAA;YAAAkC,QAAA,eACClC,OAAA;cAAAkC,QAAA,EAAI;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACNtC,OAAA;YAAAkC,QAAA,eACClC,OAAA,CAACH,IAAI;cAACmD,EAAE,EAAG,YAAW5C,OAAO,CAAC6C,UAAW;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACT,CAAC;AAEL;AAACY,EAAA,GAnEuB/C,OAAO;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}