{"ast":null,"code":"var _jsxFileName = \"D:\\\\Michael Root\\\\Work\\\\VS Code Workspace\\\\Frontend Mentor Challenges\\\\rest-countries-api-with-color-theme-switcher\\\\src\\\\pages\\\\Countries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLoaderData } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dataActions } from './../redux/slice/dataSlice';\n\n// Local Countries JSON Data\n// import COUNTRIES_DATA from './../data.json';\n\nimport CountriesList from './../components/Countries/CountriesList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction sortCountries(countries) {\n  return countries.sort((countryA, countryB) => {\n    if (countryA.name.common < countryB.name.common) {\n      return -1;\n    }\n  });\n}\nexport default function Countries() {\n  _s();\n  const COUNTRIES_DATA = useLoaderData();\n  const [countriesData, setCountriesData] = useState(sortCountries(COUNTRIES_DATA));\n  const dispatch = useDispatch();\n  const dataSliceState = useSelector(state => state.data);\n  const searchQuery = useSelector(state => state.data.searchQuery);\n  const filterOption = useSelector(state => state.data.filterOption);\n  useEffect(() => {\n    const filteredData = COUNTRIES_DATA.filter(country => {\n      if (filterOption === 'All') {\n        if (country.name.common.toLowerCase().startsWith(searchQuery.toLowerCase())) {\n          return country;\n        } else if (country.name.common.toLowerCase().includes(searchQuery.toLowerCase())) {\n          return country;\n        }\n      } else {\n        if (country.name.common.toLowerCase().startsWith(searchQuery.toLowerCase()) && country.region === filterOption) {\n          return country;\n        } else if (country.name.common.toLowerCase().includes(searchQuery.toLowerCase()) && country.region === filterOption) {\n          return country;\n        }\n      }\n    });\n    const filteredIncludesData = COUNTRIES_DATA.filter(country => {\n      if (filterOption === 'All') {\n        if (country.name.common.toLowerCase().includes(searchQuery.toLowerCase())) {\n          return country;\n        }\n      } else {\n        if (country.name.common.toLowerCase().startsWith(searchQuery.toLowerCase()) && country.region === filterOption) {\n          return country;\n        } else if (country.name.common.toLowerCase().includes(searchQuery.toLowerCase()) && country.region === filterOption) {\n          return country;\n        }\n      }\n    });\n    setCountriesData(sortCountries(filteredData));\n    return;\n  }, [searchQuery, filterOption, dataSliceState, dispatch]);\n  return /*#__PURE__*/_jsxDEV(CountriesList, {\n    COUNTRIES_DATA: countriesData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(Countries, \"Z4xnFfUkuR5vN7y3F10DmLedsNo=\", false, function () {\n  return [useLoaderData, useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Countries;\nexport async function loader() {\n  const response = await fetch('https://restcountries.com/v3.1/all');\n  const data = await response.json();\n  return data;\n}\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useEffect","useState","useLoaderData","useDispatch","useSelector","dataActions","CountriesList","jsxDEV","_jsxDEV","sortCountries","countries","sort","countryA","countryB","name","common","Countries","_s","COUNTRIES_DATA","countriesData","setCountriesData","dispatch","dataSliceState","state","data","searchQuery","filterOption","filteredData","filter","country","toLowerCase","startsWith","includes","region","filteredIncludesData","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","json","$RefreshReg$"],"sources":["D:/Michael Root/Work/VS Code Workspace/Frontend Mentor Challenges/rest-countries-api-with-color-theme-switcher/src/pages/Countries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { useLoaderData } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { dataActions } from './../redux/slice/dataSlice';\r\n\r\n// Local Countries JSON Data\r\n// import COUNTRIES_DATA from './../data.json';\r\n\r\nimport CountriesList from './../components/Countries/CountriesList';\r\n\r\nfunction sortCountries(countries) {\r\n\treturn countries.sort((countryA, countryB) => {\r\n\t\tif (countryA.name.common < countryB.name.common) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function Countries() {\r\n\tconst COUNTRIES_DATA = useLoaderData();\r\n\tconst [countriesData, setCountriesData] = useState(\r\n\t\tsortCountries(COUNTRIES_DATA)\r\n\t);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst dataSliceState = useSelector((state) => state.data);\r\n\tconst searchQuery = useSelector((state) => state.data.searchQuery);\r\n\tconst filterOption = useSelector((state) => state.data.filterOption);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst filteredData = COUNTRIES_DATA.filter((country) => {\r\n\t\t\tif (filterOption === 'All') {\r\n\t\t\t\tif (\r\n\t\t\t\t\tcountry.name.common\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.startsWith(searchQuery.toLowerCase())\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tcountry.name.common\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(searchQuery.toLowerCase())\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (\r\n\t\t\t\t\tcountry.name.common\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.startsWith(searchQuery.toLowerCase()) &&\r\n\t\t\t\t\tcountry.region === filterOption\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tcountry.name.common\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(searchQuery.toLowerCase()) &&\r\n\t\t\t\t\tcountry.region === filterOption\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst filteredIncludesData = COUNTRIES_DATA.filter((country) => {\r\n\t\t\tif (filterOption === 'All') {if (\r\n\t\t\t\t\tcountry.name.common\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(searchQuery.toLowerCase())\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (\r\n\t\t\t\t\tcountry.name.common\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.startsWith(searchQuery.toLowerCase()) &&\r\n\t\t\t\t\tcountry.region === filterOption\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tcountry.name.common\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(searchQuery.toLowerCase()) &&\r\n\t\t\t\t\tcountry.region === filterOption\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetCountriesData(sortCountries(filteredData));\r\n\t\treturn;\r\n\t}, [searchQuery, filterOption, dataSliceState, dispatch]);\r\n\r\n\treturn <CountriesList COUNTRIES_DATA={countriesData} />;\r\n}\r\n\r\nexport async function loader() {\r\n\tconst response = await fetch('https://restcountries.com/v3.1/all');\r\n\tconst data = await response.json();\r\n\treturn data;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}