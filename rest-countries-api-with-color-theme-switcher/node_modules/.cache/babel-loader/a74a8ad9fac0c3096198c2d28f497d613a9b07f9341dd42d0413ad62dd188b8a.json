{"ast":null,"code":"var _jsxFileName = \"D:\\\\Michael Root\\\\Work\\\\VS Code Workspace\\\\Frontend Mentor Challenges\\\\rest-countries-api-with-color-theme-switcher\\\\src\\\\pages\\\\CountryDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, useLoaderData } from 'react-router-dom';\n\n// Local Countries JSON Data\n// import COUNTRIES_DATA from './../data.json';\n\nimport Country from './../components/Countries/Country/Country';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryDetail() {\n  _s();\n  const {\n    countryCode\n  } = useParams();\n  const COUNTRIES_DATA = useLoaderData();\n  const country = COUNTRIES_DATA.find(country => {\n    if (country.cca3 === 'CHN') {\n      return country;\n    }\n  });\n  console.log(country);\n  let borderCountries = null;\n  const countryDetails = {\n    'Native Name': country.name.nativeName,\n    'Top Level Domain': country.topLevelDomain,\n    Population: country.population,\n    Currencies: country.currencies[0].code,\n    Region: country.region,\n    Languages: country.languages.map(language => {\n      return language.name;\n    }).join(', '),\n    'Sub region': country.subregion,\n    Capital: country.capital\n  };\n  if (country.borders) {\n    borderCountries = country.borders.map(countryCode => {\n      const borderCountry = COUNTRIES_DATA.find(country => {\n        if (country.alpha3Code === countryCode) {\n          return country;\n        }\n      });\n      return {\n        name: borderCountry.name,\n        alpha3Code: borderCountry.alpha3Code\n      };\n      // return country;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: countryCode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n  // return <Country country={countryDetails} COUNTRIES_DATA={COUNTRIES_DATA} />;\n}\n_s(CountryDetail, \"dOpYlVsYGTMAC4E9ASgT+tldNa0=\", false, function () {\n  return [useParams, useLoaderData];\n});\n_c = CountryDetail;\nexport async function loader() {\n  const response = await fetch('https://restcountries.com/v3.1/all');\n  const data = await response.json();\n  return data;\n}\nvar _c;\n$RefreshReg$(_c, \"CountryDetail\");","map":{"version":3,"names":["React","useParams","useLoaderData","Country","jsxDEV","_jsxDEV","CountryDetail","_s","countryCode","COUNTRIES_DATA","country","find","cca3","console","log","borderCountries","countryDetails","name","nativeName","topLevelDomain","Population","population","Currencies","currencies","code","Region","region","Languages","languages","map","language","join","subregion","Capital","capital","borders","borderCountry","alpha3Code","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","data","json","$RefreshReg$"],"sources":["D:/Michael Root/Work/VS Code Workspace/Frontend Mentor Challenges/rest-countries-api-with-color-theme-switcher/src/pages/CountryDetail.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams, useLoaderData } from 'react-router-dom';\r\n\r\n// Local Countries JSON Data\r\n// import COUNTRIES_DATA from './../data.json';\r\n\r\nimport Country from './../components/Countries/Country/Country';\r\n\r\nexport default function CountryDetail() {\r\n\tconst { countryCode } = useParams();\r\n\tconst COUNTRIES_DATA = useLoaderData();\r\n\r\n\tconst country = COUNTRIES_DATA.find((country) => {\r\n\t\tif (country.cca3 === 'CHN') {\r\n\t\t\treturn country;\r\n\t\t}\r\n\t});\r\n\r\n\tconsole.log(country);\r\n\r\n\tlet borderCountries = null;\r\n\r\n\tconst countryDetails = {\r\n\t\t'Native Name': country.name.nativeName,\r\n\t\t'Top Level Domain': country.topLevelDomain,\r\n\t\tPopulation: country.population,\r\n\t\tCurrencies: country.currencies[0].code,\r\n\t\tRegion: country.region,\r\n\t\tLanguages: country.languages\r\n\t\t\t.map((language) => {\r\n\t\t\t\treturn language.name;\r\n\t\t\t})\r\n\t\t\t.join(', '),\r\n\t\t'Sub region': country.subregion,\r\n\t\tCapital: country.capital,\r\n\t};\r\n\r\n\tif (country.borders) {\r\n\t\tborderCountries = country.borders.map((countryCode) => {\r\n\t\t\tconst borderCountry = COUNTRIES_DATA.find((country) => {\r\n\t\t\t\tif (country.alpha3Code === countryCode) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\tname: borderCountry.name,\r\n\t\t\t\talpha3Code: borderCountry.alpha3Code,\r\n\t\t\t};\r\n\t\t\t// return country;\r\n\t\t});\r\n\t}\r\n\r\n\treturn <h1>{countryCode}</h1>;\r\n\t// return <Country country={countryDetails} COUNTRIES_DATA={COUNTRIES_DATA} />;\r\n}\r\n\r\nexport async function loader() {\r\n\tconst response = await fetch('https://restcountries.com/v3.1/all');\r\n\tconst data = await response.json();\r\n\treturn data;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;;AAE3D;AACA;;AAEA,OAAOC,OAAO,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAY,CAAC,GAAGP,SAAS,CAAC,CAAC;EACnC,MAAMQ,cAAc,GAAGP,aAAa,CAAC,CAAC;EAEtC,MAAMQ,OAAO,GAAGD,cAAc,CAACE,IAAI,CAAED,OAAO,IAAK;IAChD,IAAIA,OAAO,CAACE,IAAI,KAAK,KAAK,EAAE;MAC3B,OAAOF,OAAO;IACf;EACD,CAAC,CAAC;EAEFG,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EAEpB,IAAIK,eAAe,GAAG,IAAI;EAE1B,MAAMC,cAAc,GAAG;IACtB,aAAa,EAAEN,OAAO,CAACO,IAAI,CAACC,UAAU;IACtC,kBAAkB,EAAER,OAAO,CAACS,cAAc;IAC1CC,UAAU,EAAEV,OAAO,CAACW,UAAU;IAC9BC,UAAU,EAAEZ,OAAO,CAACa,UAAU,CAAC,CAAC,CAAC,CAACC,IAAI;IACtCC,MAAM,EAAEf,OAAO,CAACgB,MAAM;IACtBC,SAAS,EAAEjB,OAAO,CAACkB,SAAS,CAC1BC,GAAG,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACb,IAAI;IACrB,CAAC,CAAC,CACDc,IAAI,CAAC,IAAI,CAAC;IACZ,YAAY,EAAErB,OAAO,CAACsB,SAAS;IAC/BC,OAAO,EAAEvB,OAAO,CAACwB;EAClB,CAAC;EAED,IAAIxB,OAAO,CAACyB,OAAO,EAAE;IACpBpB,eAAe,GAAGL,OAAO,CAACyB,OAAO,CAACN,GAAG,CAAErB,WAAW,IAAK;MACtD,MAAM4B,aAAa,GAAG3B,cAAc,CAACE,IAAI,CAAED,OAAO,IAAK;QACtD,IAAIA,OAAO,CAAC2B,UAAU,KAAK7B,WAAW,EAAE;UACvC,OAAOE,OAAO;QACf;MACD,CAAC,CAAC;MAEF,OAAO;QACNO,IAAI,EAAEmB,aAAa,CAACnB,IAAI;QACxBoB,UAAU,EAAED,aAAa,CAACC;MAC3B,CAAC;MACD;IACD,CAAC,CAAC;EACH;;EAEA,oBAAOhC,OAAA;IAAAiC,QAAA,EAAK9B;EAAW;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC7B;AACD;AAACnC,EAAA,CA/CuBD,aAAa;EAAA,QACZL,SAAS,EACVC,aAAa;AAAA;AAAAyC,EAAA,GAFbrC,aAAa;AAiDrC,OAAO,eAAesC,MAAMA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;EAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACZ;AAAC,IAAAJ,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}