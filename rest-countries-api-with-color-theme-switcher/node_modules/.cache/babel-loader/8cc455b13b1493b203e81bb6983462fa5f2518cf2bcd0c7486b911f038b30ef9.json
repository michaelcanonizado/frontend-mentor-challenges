{"ast":null,"code":"var _jsxFileName = \"D:\\\\Michael Root\\\\Work\\\\VS Code Workspace\\\\Frontend Mentor Challenges\\\\rest-countries-api-with-color-theme-switcher\\\\src\\\\pages\\\\CountryDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, useLoaderData } from 'react-router-dom';\n\n// Local Countries JSON Data\n// import COUNTRIES_DATA from './../data.json';\n\nimport Country from './../components/Countries/Country/Country';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction findAndFormatCountryDetails(COUNTRIES_DATA, countryCode) {\n  let borderCountries = null;\n  const country = COUNTRIES_DATA.find(country => {\n    if (country.cca3 === countryCode) {\n      return country;\n    }\n  });\n  if (country.borders) {\n    // borderCountries = country.borders.map((countryCode) => {\n    // \tconst borderCountry = COUNTRIES_DATA.find((country) => {\n    // \t\tif (country.alpha3Code === countryCode) {\n    // \t\t\treturn country;\n    // \t\t}\n    // \t});\n    // \treturn {\n    // \t\tname: borderCountry.name,\n    // \t\talpha3Code: borderCountry.alpha3Code,\n    // \t};\n    // \t// return country;\n    // });\n  }\n  const countryDetails = {\n    'Native Name': Object.values(country.name.nativeName[Object.keys(country.name.nativeName)[0]])[0],\n    'Top Level Domain': country.tld[0],\n    Population: country.population,\n    // Currencies: Object.keys(country.currencies),\n    Region: country.region,\n    Languages: Object.values(country.languages),\n    'Sub region': country.subregion,\n    Capital: country.capital ? country.capital[0] : 'N/A',\n    borders: borderCountries\n  };\n  return countryDetails;\n}\nexport default function CountryDetail() {\n  _s();\n  const {\n    countryCode\n  } = useParams();\n  const COUNTRIES_DATA = useLoaderData();\n  const countryDetails = findAndFormatCountryDetails(COUNTRIES_DATA, countryCode);\n  console.log(countryDetails);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: countryDetails['Native Name']\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n  // return <Country country={countryDetails} COUNTRIES_DATA={COUNTRIES_DATA} />;\n}\n_s(CountryDetail, \"dOpYlVsYGTMAC4E9ASgT+tldNa0=\", false, function () {\n  return [useParams, useLoaderData];\n});\n_c = CountryDetail;\nexport async function loader() {\n  const response = await fetch('https://restcountries.com/v3.1/all');\n  const data = await response.json();\n  return data;\n}\nvar _c;\n$RefreshReg$(_c, \"CountryDetail\");","map":{"version":3,"names":["React","useParams","useLoaderData","Country","jsxDEV","_jsxDEV","findAndFormatCountryDetails","COUNTRIES_DATA","countryCode","borderCountries","country","find","cca3","borders","countryDetails","Object","values","name","nativeName","keys","tld","Population","population","Region","region","Languages","languages","subregion","Capital","capital","CountryDetail","_s","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","data","json","$RefreshReg$"],"sources":["D:/Michael Root/Work/VS Code Workspace/Frontend Mentor Challenges/rest-countries-api-with-color-theme-switcher/src/pages/CountryDetail.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams, useLoaderData } from 'react-router-dom';\r\n\r\n// Local Countries JSON Data\r\n// import COUNTRIES_DATA from './../data.json';\r\n\r\nimport Country from './../components/Countries/Country/Country';\r\n\r\nfunction findAndFormatCountryDetails(COUNTRIES_DATA, countryCode) {\r\n\tlet borderCountries = null;\r\n\r\n\tconst country = COUNTRIES_DATA.find((country) => {\r\n\t\tif (country.cca3 === countryCode) {\r\n\t\t\treturn country;\r\n\t\t}\r\n\t});\r\n\r\n\tif (country.borders) {\r\n\t\t// borderCountries = country.borders.map((countryCode) => {\r\n\t\t// \tconst borderCountry = COUNTRIES_DATA.find((country) => {\r\n\t\t// \t\tif (country.alpha3Code === countryCode) {\r\n\t\t// \t\t\treturn country;\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\t\t// \treturn {\r\n\t\t// \t\tname: borderCountry.name,\r\n\t\t// \t\talpha3Code: borderCountry.alpha3Code,\r\n\t\t// \t};\r\n\t\t// \t// return country;\r\n\t\t// });\r\n\t}\r\n\r\n\tconst countryDetails = {\r\n\t\t'Native Name': Object.values(\r\n\t\t\tcountry.name.nativeName[Object.keys(country.name.nativeName)[0]]\r\n\t\t)[0],\r\n\t\t'Top Level Domain': country.tld[0],\r\n\t\tPopulation: country.population,\r\n\t\t// Currencies: Object.keys(country.currencies),\r\n\t\tRegion: country.region,\r\n\t\tLanguages: Object.values(country.languages),\r\n\t\t'Sub region': country.subregion,\r\n\t\tCapital: country.capital ? country.capital[0] : 'N/A',\r\n\t\tborders: borderCountries,\r\n\t};\r\n\r\n\treturn countryDetails;\r\n}\r\n\r\nexport default function CountryDetail() {\r\n\tconst { countryCode } = useParams();\r\n\tconst COUNTRIES_DATA = useLoaderData();\r\n\r\n\tconst countryDetails = findAndFormatCountryDetails(COUNTRIES_DATA, countryCode);\r\n\r\n\tconsole.log(countryDetails);\r\n\r\n\treturn <h1>{countryDetails['Native Name']}</h1>;\r\n\t// return <Country country={countryDetails} COUNTRIES_DATA={COUNTRIES_DATA} />;\r\n}\r\n\r\nexport async function loader() {\r\n\tconst response = await fetch('https://restcountries.com/v3.1/all');\r\n\tconst data = await response.json();\r\n\treturn data;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;;AAE3D;AACA;;AAEA,OAAOC,OAAO,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,2BAA2BA,CAACC,cAAc,EAAEC,WAAW,EAAE;EACjE,IAAIC,eAAe,GAAG,IAAI;EAE1B,MAAMC,OAAO,GAAGH,cAAc,CAACI,IAAI,CAAED,OAAO,IAAK;IAChD,IAAIA,OAAO,CAACE,IAAI,KAAKJ,WAAW,EAAE;MACjC,OAAOE,OAAO;IACf;EACD,CAAC,CAAC;EAEF,IAAIA,OAAO,CAACG,OAAO,EAAE;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAGD,MAAMC,cAAc,GAAG;IACtB,aAAa,EAAEC,MAAM,CAACC,MAAM,CAC3BN,OAAO,CAACO,IAAI,CAACC,UAAU,CAACH,MAAM,CAACI,IAAI,CAACT,OAAO,CAACO,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAChE,CAAC,CAAC,CAAC,CAAC;IACJ,kBAAkB,EAAER,OAAO,CAACU,GAAG,CAAC,CAAC,CAAC;IAClCC,UAAU,EAAEX,OAAO,CAACY,UAAU;IAC9B;IACAC,MAAM,EAAEb,OAAO,CAACc,MAAM;IACtBC,SAAS,EAAEV,MAAM,CAACC,MAAM,CAACN,OAAO,CAACgB,SAAS,CAAC;IAC3C,YAAY,EAAEhB,OAAO,CAACiB,SAAS;IAC/BC,OAAO,EAAElB,OAAO,CAACmB,OAAO,GAAGnB,OAAO,CAACmB,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;IACrDhB,OAAO,EAAEJ;EACV,CAAC;EAED,OAAOK,cAAc;AACtB;AAEA,eAAe,SAASgB,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAAEvB;EAAY,CAAC,GAAGP,SAAS,CAAC,CAAC;EACnC,MAAMM,cAAc,GAAGL,aAAa,CAAC,CAAC;EAEtC,MAAMY,cAAc,GAAGR,2BAA2B,CAACC,cAAc,EAAEC,WAAW,CAAC;EAE/EwB,OAAO,CAACC,GAAG,CAACnB,cAAc,CAAC;EAE3B,oBAAOT,OAAA;IAAA6B,QAAA,EAAKpB,cAAc,CAAC,aAAa;EAAC;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC/C;AACD;AAACP,EAAA,CAVuBD,aAAa;EAAA,QACZ7B,SAAS,EACVC,aAAa;AAAA;AAAAqC,EAAA,GAFbT,aAAa;AAYrC,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;EAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACZ;AAAC,IAAAJ,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}